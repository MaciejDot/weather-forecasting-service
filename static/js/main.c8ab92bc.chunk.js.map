{"version":3,"sources":["pages/error/Error404.tsx","components/LookupWeatherCard.tsx","contexts/GeoLocationContext.ts","hooks/useGeoLocation.ts","pages/main/Main.tsx","components/TemperatureDetails.tsx","components/WeatherDataAndDescription.tsx","hooks/useTypedStyles.ts","theme/basicClasses.ts","components/WeatherDetails.tsx","components/LocationViewBody.tsx","components/LocationBar.tsx","pages/location/LocationDetails.tsx","pages/location/MyLocationDetails.tsx","App.tsx","index.tsx"],"names":["Error404","Typography","variant","align","LookupWeatherCard","props","Card","CardActionArea","component","Link","to","CardContent","Grid","container","item","xs","locationLabel","temp","toFixed","geoLocationInitialValues","isError","isLoading","location","latitude","longitude","alreadyRequested","setAlreadyRequested","setLocation","setIsLoading","setIsError","GeoLocationContext","React","createContext","useGeoLocation","geo","useContext","navigator","geolocation","getCurrentPosition","position","coords","Dashboard","londonQuery","useQuery","fetch","process","then","res","json","berlinQuery","myLocationQuery","enabled","Alert","severity","alignItems","spacing","justifyContent","lg","Skeleton","animation","height","data","main","TemperatureDetails","weatherKind","length","reduce","a","b","highTemp","lowTemp","WeatherDataAndDescription","description","useTypedStyles","styleDef","makeStyles","basicClasses","theme","root","backgroundColor","boxShadow","rightSeparationBorder","borderRight","borderRightWidth","borderColor","palette","type","bottomSeparationBorder","borderBottom","borderBottomWidth","marginTopCentering","marginTop","WeatherDetails","format_time","utc_timestamp","timezone","Intl","DateTimeFormat","timeStyle","timeZone","format","addSeconds","Date","classes","className","sunrise","sunset","humidity","visibility","LocationViewBody","LocationBar","IconButton","ArrowBackIos","label","LocationDetails","cityName","useParams","query","Helmet","temp_max","temp_min","weather","map","x","sys","MyLocationDetails","client","QueryClient","defaultOptions","queries","cacheTime","staleTime","App","Path","path","exact","title","children","prefersDarkMode","useMediaQuery","useEffect","document","getElementsByTagName","style","useMemo","createTheme","geoLocationContextValues","useState","useSetupLocationContextValues","ThemeProvider","Paper","Provider","value","QueryClientProvider","Main","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c8ab92bc.chunk.js","sourcesContent":["import { Typography } from '@material-ui/core';\nconst Error404 =() => {\n    return (\n        <>\n        <Typography variant=\"h2\" align=\"center\">404</Typography>\n        <Typography variant=\"h4\" align=\"center\">Page not found</Typography>\n        </>\n    )\n};\nexport default Error404;","import { Card, CardActionArea, CardContent, Grid, Typography } from \"@material-ui/core\";\nimport {\n    Link\n} from \"react-router-dom\";\n\ninterface LookupWeatherCardProps {\n    locationLabel: string\n    temp?: number\n    to: string\n}\n\nconst LookupWeatherCard = (props: LookupWeatherCardProps) => {\n    return <Card>\n        <CardActionArea component={Link} to={props.to}>\n        <CardContent>\n        <Grid container>\n            <Grid item xs={6}>\n                <Typography variant=\"h6\" align='left'>{props.locationLabel}</Typography>\n            </Grid>\n            <Grid item xs={6}>\n                <Typography variant=\"h6\" align='right'>{props.temp?.toFixed(0)??'-'}°C</Typography>\n            </Grid>\n        </Grid>\n        </CardContent>\n        </CardActionArea>\n    </Card>\n}\n\nexport default LookupWeatherCard;","import React, { useState } from \"react\";\n\nconst geoLocationInitialValues = {\n        isError: false,\n        isLoading: true,\n        location:{latitude:0, longitude:0 },\n        alreadyRequested: false,\n        setAlreadyRequested: (alreadyRequested: boolean)=> {},\n        setLocation:(location: {latitude:number, longitude:number })=>{},\n        setIsLoading: (isLoading: boolean)=>{},\n        setIsError:(isError: boolean)=>{}\n    }\n\nexport const useSetupLocationContextValues=  ()=>{\n    const [isError, setIsError] = useState(geoLocationInitialValues.isError)\n    const [location, setLocation] = useState(geoLocationInitialValues.location);\n    const [isLoading, setIsLoading] = useState(geoLocationInitialValues.isLoading);\n    const [alreadyRequested, setAlreadyRequested] = useState(geoLocationInitialValues.alreadyRequested);\n    return { isError, setIsError, setIsLoading, setLocation, isLoading, location, alreadyRequested, setAlreadyRequested }\n}\n\nexport const GeoLocationContext = React.createContext(geoLocationInitialValues);","import { useContext } from \"react\";\nimport { GeoLocationContext } from \"../contexts/GeoLocationContext\";\n\nexport function useGeoLocation(){\n    const geo = useContext(GeoLocationContext)\n    !geo.alreadyRequested && navigator.geolocation.getCurrentPosition(\n        position=>{\n            geo.setAlreadyRequested(true)\n            geo.setLocation({ latitude: position.coords.latitude, longitude: position.coords.longitude})\n            geo.setIsLoading(false);\n            geo.setIsError(false);\n        },\n        ()=> {\n            geo.setAlreadyRequested(true);\n            geo.setIsError(true)\n        }\n    );\n    return { isError:geo.isError,location: geo.location, isLoading:geo.isLoading}\n}","import { Grid, Typography } from \"@material-ui/core\"\nimport { useQuery } from \"react-query\";\nimport { WeatherDataModel } from \"../../apiModels/openweather/WheaterDataModel\";\nimport LookupWeatherCard from \"../../components/LookupWeatherCard\";\nimport { useGeoLocation } from \"../../hooks/useGeoLocation\"\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport Alert from '@material-ui/lab/Alert';\n\nconst Dashboard = () => {\n    const geo = useGeoLocation();\n\n    const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n\n    const londonQuery = useQuery<WeatherDataModel>(\"london-weather\", () =>\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=London&appid=${apiKey}&units=metric`).then(res => res.json()))\n\n    const berlinQuery = useQuery<WeatherDataModel>(\"berlin-weather\", () =>\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=Berlin&appid=${apiKey}&units=metric`).then(res => res.json()))\n\n    const myLocationQuery = useQuery<WeatherDataModel>(\"my-location-weather\", () =>\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${geo.location.latitude}&lon=${geo.location.longitude}&units=metric&appid=${apiKey}`).then(res => res.json()), {\n        enabled: !geo.isLoading && !geo.isError\n    })\n\n    return (<>\n        <Typography variant='h5' align='center'>\n            Dashboard\n        </Typography>\n        {geo.isError && <Alert severity='error'>Turn on location in your browser to see weather result for your city</Alert>}\n        {myLocationQuery.isError && <Alert severity='error'>Error during fetching temperature data for your location</Alert>}\n        {berlinQuery.isError && <Alert severity='error'>Error during fetching temperature data for Berlin</Alert>}\n        {londonQuery.isError && <Alert severity='error'>Error during fetching temperature data for London</Alert>}\n        <Grid container alignItems='center' spacing={3} justifyContent='space-evenly'>\n            <Grid item xs={12} lg={4}>\n                {myLocationQuery.isLoading || geo.isLoading ? <Skeleton animation=\"wave\" height={64} /> : <LookupWeatherCard locationLabel=\"My Location\" temp={myLocationQuery?.data?.main?.temp} to='/location' />}\n            </Grid>\n            <Grid item xs={12} lg={4}>\n                {berlinQuery.isLoading ? <Skeleton animation=\"wave\" height={64} /> : <LookupWeatherCard locationLabel=\"Berlin\" temp={berlinQuery?.data?.main?.temp} to='/location/Berlin' />}\n            </Grid>\n            <Grid item xs={12} lg={4}>\n                {londonQuery.isLoading ? <Skeleton animation=\"wave\" height={64} /> : <LookupWeatherCard locationLabel=\"London\" temp={londonQuery?.data?.main?.temp} to='/location/London' />}\n            </Grid>\n        </Grid>\n    </>)\n}\n\nexport default Dashboard;","import { Typography } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport React from \"react\";\n\ninterface TemperatureDetailsProps{\n    isLoading: boolean,\n    isError: boolean\n    weatherKind?: string[],\n    highTemp?: number,\n    lowTemp?: number,\n    temp?: number\n}\n\nconst TemperatureDetails = (props: TemperatureDetailsProps)=>{\n    return (<>\n        {props.isLoading ? <Skeleton animation=\"wave\" height={50}/> : \n        <Typography variant='subtitle1' align='center'>\n            {props.isError ? '--' : (props.weatherKind.length && props.weatherKind.reduce((a,b)=>`${a},${b}`))??'--'}\n        </Typography>}\n        {props.isLoading ? <Skeleton animation=\"wave\" height={50}/> : \n        <Typography variant='h5' align='center'>\n                {props.isError ? '--':props.temp?.toFixed(0)??'--'} °C\n        </Typography>}\n        {props.isLoading ? <Skeleton animation=\"wave\" height={50}/> : \n        <Typography variant='h6' align='center'>\n            H:{props.isError ? '--':props.highTemp?.toFixed(0)??'--'}°C&nbsp;L:{props.isError ? '--':props.lowTemp?.toFixed(0)??'--'}°C\n        </Typography>\n        }\n    </>)}\n\nexport default TemperatureDetails","import { Typography } from \"@material-ui/core\";\nimport { Skeleton } from \"@material-ui/lab\";\n\ninterface WeatherDataAndDescriptionProps {\n    description: string\n    data: string\n    isLoading: boolean\n}\n\nconst WeatherDataAndDescription = (props: WeatherDataAndDescriptionProps) => {\n    return <>\n        <Typography variant='subtitle1' align='center'>\n            {props.description}\n        </Typography>\n        {props.isLoading ?<Skeleton animation='wave' height={50}/>:<Typography variant=\"h6\" align='center'>\n            {props.data}\n        </Typography>}\n    </>\n}\n\nexport default WeatherDataAndDescription;","import { makeStyles } from \"@material-ui/core\";\nimport { ClassesBaseType } from \"../theme/ClassesBaseType\";\n\nconst useTypedStyles =<TClasses extends ClassesBaseType>(styleDef : TClasses)=>{\n    return makeStyles(styleDef)() as Record<keyof ReturnType<TClasses>, string>\n}\n\nexport default useTypedStyles;","import { Theme } from \"@material-ui/core\";\n\nexport const basicClasses = (theme: Theme) => ({\n    root: {\n        backgroundColor: 'transparent',\n        boxShadow: 'none',\n    },\n    rightSeparationBorder: {\n        borderRight: 'solid',\n        borderRightWidth: '0.5px',\n        borderColor: theme.palette.type === 'dark' ? 'rgba(150, 150, 150, 0.12)' : 'rgba(100, 100, 100, 0.12)'\n    },\n    bottomSeparationBorder: {\n        borderBottom: 'solid',\n        borderBottomWidth: '0.5px',\n        borderColor: theme.palette.type === 'dark' ? 'rgba(150, 150, 150, 0.12)' : 'rgba(100, 100, 100, 0.12)'\n    },\n    marginTopCentering: {\n        marginTop: '12px'\n    }\n})","import { Grid } from \"@material-ui/core\";\nimport WeatherDataAndDescription from \"./WeatherDataAndDescription\";\nimport { addSeconds } from 'date-fns'\nimport useTypedStyles from \"../hooks/useTypedStyles\";\nimport { basicClasses } from \"../theme/basicClasses\";\n\ninterface WeatherDetailsProps {\n    isError: boolean\n    isLoading: boolean\n    sunrise?: number\n    sunset?: number\n    humidity?: number\n    visibility?: number\n    timezone?: number\n}\n\nconst WeatherDetails = (props: WeatherDetailsProps) => {\n    const format_time = (utc_timestamp: number, timezone: number) => {\n        const dtFormat = new Intl.DateTimeFormat('pl-PL', {\n            timeStyle: 'short',\n            timeZone: 'UTC'\n        });\n        return dtFormat.format(addSeconds(new Date(utc_timestamp * 1e3), timezone));\n    }\n    const classes = useTypedStyles(basicClasses);\n    return <><Grid container alignItems='center' spacing={3} justifyContent='space-evenly' className={classes.bottomSeparationBorder}>\n        <Grid item xs={6}\n            className={classes.rightSeparationBorder}\n        >\n            <WeatherDataAndDescription\n                description=\"Sunrise\"\n                isLoading={props.isLoading}\n                data={props.isError || props.isLoading ? '--:--' : format_time(props.sunrise ?? 0, props.timezone ?? 0)}\n            />\n        </Grid>\n        <Grid item xs={6}>\n            <WeatherDataAndDescription\n                description=\"Sunset\"\n                isLoading={props.isLoading}\n                data={props.isError || props.isLoading ? '--:--' : format_time(props.sunset ?? 0, props.timezone ?? 0)}\n            />\n        </Grid>\n    </Grid>\n        <Grid container alignItems='center' spacing={3} justifyContent='space-evenly' className={classes.marginTopCentering}>\n            <Grid item xs={6} className={classes.rightSeparationBorder}>\n                <WeatherDataAndDescription\n                    description=\"Humidity\"\n                    isLoading={props.isLoading}\n                    data={props.isError || props.isLoading ? '--.-- %' : `${props.humidity.toFixed(0)} %`}\n                />\n            </Grid>\n            <Grid item xs={6}>\n                <WeatherDataAndDescription\n                    description=\"Visibility\"\n                    isLoading={props.isLoading}\n                    data={props.isError || props.isLoading ? '--.-- km' : `${(props.visibility / 1000).toFixed(2)} km`}\n                />\n            </Grid>\n        </Grid>\n    </>\n}\n\nexport default WeatherDetails;","import { Grid } from \"@material-ui/core\";\nimport TemperatureDetails from \"./TemperatureDetails\";\nimport WeatherDetails from \"./WeatherDetails\";\n\n\ninterface LocationViewBodyProps {\n    isError: boolean\n    isLoading: boolean\n    temp?: number\n    highTemp?: number\n    lowTemp?: number\n    weatherKind?: string[]\n\n    sunrise?: number\n    sunset?: number\n    humidity?: number\n    visibility?: number,\n    timezone?: number\n}\n\n\nconst LocationViewBody = (props: LocationViewBodyProps) => {\n\n    return <Grid container alignItems='center' spacing={3} justifyContent='space-evenly'>\n        <Grid item xs={12} lg={6}>\n            <TemperatureDetails\n                {...props}\n            />\n        </Grid>\n        <Grid item xs={12} lg={6}>\n            <WeatherDetails\n                {...props}\n            />\n        </Grid>\n    </Grid>\n}\n\nexport default LocationViewBody;","import { IconButton, Grid, Typography } from \"@material-ui/core\";\nimport { ArrowBackIos } from \"@material-ui/icons\";\nimport { Link } from \"react-router-dom\";\ninterface LocationBarProps {\n    label: string\n}\nconst LocationBar = (props: LocationBarProps) => {\n    return <Grid container>\n        <Grid item xs={1}>\n            <IconButton\n                component={Link} to='/'\n            >\n                <ArrowBackIos />\n            </IconButton>\n        </Grid>\n        <Grid item xs={10}>\n            <Typography variant='h5' align='center'>\n                {props.label}\n            </Typography>\n        </Grid>\n    </Grid>\n}\nexport default LocationBar;","import { useQuery } from \"react-query\";\nimport { WeatherDataModel } from \"../../apiModels/openweather/WheaterDataModel\";\nimport { Helmet } from \"react-helmet\";\nimport {\n    useParams\n} from \"react-router-dom\";\nimport { Alert } from \"@material-ui/lab\";\nimport LocationViewBody from \"../../components/LocationViewBody\";\nimport LocationBar from \"../../components/LocationBar\";\n\nconst LocationDetails = () => {\n    const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n    const { cityName } = useParams();\n    const query = useQuery<WeatherDataModel>(`${cityName}-weather`, () =>\n        fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${apiKey}&units=metric`).then(res => res.json()));\n\n    const data = query.data;\n    return <>  <Helmet>\n        <title>Weather in {cityName}</title>\n    </Helmet>\n        <LocationBar label={cityName}/>\n        {query.isError && <Alert severity='error'>Error during fetching temperature data for {cityName}</Alert>}\n        <LocationViewBody\n            isError={query.isError}\n            isLoading={query.isLoading}\n            timezone={data?.timezone}\n            temp={data?.main.temp}\n            highTemp={data?.main?.temp_max}\n            lowTemp={data?.main?.temp_min}\n            weatherKind={data?.weather?.map(x => x.main)}\n            sunrise={data?.sys?.sunrise}\n            sunset={data?.sys?.sunset}\n            humidity={data?.main?.humidity}\n            visibility={data?.visibility}\n        />\n    </>\n}\n\nexport default LocationDetails;","import { useQuery } from \"react-query\";\nimport { WeatherDataModel } from \"../../apiModels/openweather/WheaterDataModel\";\nimport { useGeoLocation } from \"../../hooks/useGeoLocation\";\nimport { Alert } from \"@material-ui/lab\";\nimport LocationBar from \"../../components/LocationBar\";\nimport LocationViewBody from \"../../components/LocationViewBody\";\n\nconst MyLocationDetails = ()=>{\n    const geo = useGeoLocation();\n\n    const apiKey = process.env.REACT_APP_OPENWEATHER_API_KEY;\n    const query = useQuery<WeatherDataModel>(\"my-location-weather\", ()=> \n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${geo.location.latitude}&lon=${geo.location.longitude}&units=metric&appid=${apiKey}`).then(res=>res.json()),{\n            enabled: !geo.isLoading && !geo.isError\n        })\n\n    const data = query.data;\n\n    return <>\n     <LocationBar label=\"My Location\"/>\n     {geo.isError && <Alert severity='error'>Turn on location in your browser to see weather result for your city</Alert>}\n     {query.isError && <Alert severity='error'>Error during fetching temperature data for your location</Alert>}\n       <LocationViewBody\n        isError={query.isError || geo.isError}\n        timezone={data?.timezone}\n        isLoading={query.isLoading || geo.isLoading}\n        temp={data?.main.temp}\n        highTemp={data?.main?.temp_max}\n        lowTemp={data?.main?.temp_min}\n        weatherKind={data?.weather?.map(x => x.main)}\n        sunrise={data?.sys?.sunrise}\n        sunset={data?.sys?.sunset}\n        humidity={data?.main?.humidity}\n        visibility={data?.visibility}\n       />\n    </>\n}\n\nexport default MyLocationDetails;","import React, { useEffect, useMemo } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Error404 from './pages/error/Error404';\nimport Main from './pages/main/Main';\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport LocationDetails from './pages/location/LocationDetails';\nimport MyLocationDetails from './pages/location/MyLocationDetails';\nimport { GeoLocationContext, useSetupLocationContextValues } from './contexts/GeoLocationContext';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { createTheme, Paper, ThemeProvider } from '@material-ui/core';\nimport useTypedStyles from './hooks/useTypedStyles';\nimport { basicClasses } from './theme/basicClasses';\n\nconst client = new QueryClient({\n    defaultOptions: {\n        queries: {\n            cacheTime: 60 * 1000,\n            staleTime: 30 * 1000\n        }\n    }\n})\n\nfunction App() {\n    const Path = (props: { children?: React.ReactNode, title: string, path: string, exact?: boolean }) =>\n        <Route path={props.path} exact={props.exact}>\n            <Helmet>\n                <title>{props.title}</title>\n            </Helmet>\n            {props.children}\n        </Route>\n\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    useEffect(() => {\n        /*body element is outside react dom so there is no way to reference it by react*/\n        document.getElementsByTagName('body')[0].style.backgroundColor = prefersDarkMode ? 'black' : 'white'\n    }, [prefersDarkMode]);\n\n    const theme = useMemo(\n        () =>\n            createTheme({\n                palette: {\n                    type: prefersDarkMode ? 'dark' : 'light',\n                },\n            }),\n        [prefersDarkMode],\n    );\n\n    const geoLocationContextValues = useSetupLocationContextValues()\n\n    const classes = useTypedStyles(basicClasses);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Paper className={classes.root}>\n                <GeoLocationContext.Provider value={geoLocationContextValues}>\n                    <QueryClientProvider client={client}>\n                        <Router>\n                            <Switch>\n                                <Path exact path=\"/location\" title=\"Weather in my location\">\n                                    <MyLocationDetails />\n                                </Path>\n                                <Route exact path=\"/location/:cityName\">\n                                    <LocationDetails />\n                                </Route>\n                                <Path exact path=\"/\" title=\"Wheater Forecasting Service\">\n                                    <Main />\n                                </Path>\n                                <Path path=\"*\" title=\"404 page not found\">\n                                    <Error404 />\n                                </Path>\n                            </Switch>\n                        </Router>\n                    </QueryClientProvider>\n                </GeoLocationContext.Provider>\n            </Paper>\n        </ThemeProvider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}